type Market @entity {
  " Unique ID for a market "
  id: ID!

  " Token associated to this market "
  token: Token!

  " Creation timestamp in seconds "
  created: BigInt!

  " Block number in which the market was created "
  createdAtBlock: BigInt!

  " Transaction hash in which the market was created "
  createdAtTransaction: Bytes!

  " Current market state "
  state: MarketState

  " Timestamp of last interest index update "
  lastIndexUpdate: BigInt
}

type MarketState @entity {
  id: ID!

  " Market reference "
  market: Market!

  " The amount borrowed vs the amount lent "
  utilization: BigDecimal!

  " Current interest rate for borrowers "
  borrowerInterestRate: BigDecimal!

  " Current interest rate for lenders "
  lenderInterestRate: BigDecimal!

  " Current interest rate for traders "
  traderInterestRate: BigDecimal!

  " Timestamp in seconds "
  timestamp: BigInt!
}

type Token @entity {
  " Token address "
  id: ID!

  " Token address "
  address: Bytes!

  " Number of decimals the token uses "
  decimals: Int!

  " Human-readable name of the token "
  name: String

  " Symbol of the token "
  symbol: String

  " Associated market "
  market: Market!

  " Current price "
  price: TokenPrice
}

type TokenPrice @entity {
  " Equals to:  <tokenAddress>-<timestamp>"
  id: ID!

  " Token reference "
  token: Token!

  " Asset price "
  value: BigDecimal!

  " Timestamp in seconds "
  timestamp: BigInt!

  " Block number "
  block: BigInt!
}
